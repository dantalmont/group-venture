{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Desktop/group-venture/client/src/components/newComponents/Card1/index.js\";\nimport React, { useState, useEffect, Component } from \"react\"; // import \"./style.css\";\n\nimport API from \"../../../utils/API\"; // class Card extends Component() {\n\nfunction Card1() {\n  // state = {   transactions:[], \n  //             debt:0, \n  //             credit:0\n  // }\n  const [transactions, setTransactions] = useState([]); // const [debt , setDebt] = useState(0)\n  // const [credit , setCredit] = useState(0)\n\n  useEffect(() => {\n    loadTransactions();\n  }, []);\n\n  function loadTransactions() {\n    API.getTransactions().then(res => setTransactions(res.data)).catch(err => console.log(err));\n  }\n\n  ; //addAmount is a helper function takes in true/false parameter, depending if you are collecting credit or debt.        \n  // //if goes through all rows in transaction array and adds the value of all the debt if false, and all the credit if true.\n  // function addAmount(direction) {\n  //     var amount = 0;\n  //     if(direction){\n  //         transactions.map( transaction => \n  //         {\n  //                 if(transaction.type = true )\n  //                     amount += transaction.bill;   \n  //             }        \n  //         );\n  //     }\n  //     else{\n  //         transactions.map(transaction => \n  //             {    \n  //                 if(transaction.type = false )\n  //                     amount += transaction.bill;\n  //             }           \n  //         );\n  //     }\n  //     return amount;           \n  // }\n  // function setDebtCredit(){\n  //     this.setState({\n  //         setCredit(transaction.type))\n  // }\n  // // setDebtCredit = \n  // render(){ \n  //     this.setDebtCredit();\n  // let { debt , credit } = this.state\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, transactions.map(transaction => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, transaction.name)))));\n} // }    \n\n\nexport default Card1;","map":{"version":3,"sources":["/Users/danny/Desktop/group-venture/client/src/components/newComponents/Card1/index.js"],"names":["React","useState","useEffect","Component","API","Card1","transactions","setTransactions","loadTransactions","getTransactions","then","res","data","catch","err","console","log","map","transaction","index","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD,C,CACA;;AACA,OAAOC,GAAP,MAAgB,oBAAhB,C,CAGA;;AACA,SAASC,KAAT,GAAiB;AAET;AACA;AACA;AACA;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD,CAPS,CAQT;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,gBAAgB;AACnB,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,gBAAT,GAA2B;AACvBJ,IAAAA,GAAG,CAACK,eAAJ,GACCC,IADD,CACOC,GAAG,IACNJ,eAAe,CAACI,GAAG,CAACC,IAAL,CAFnB,EAIAC,KAJA,CAIMC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJb;AAKH;;AAAA,GArBQ,CAwBT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACI;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,YAAY,CAACW,GAAb,CAAiBC,WAAW,iBACzB;AAAI,IAAA,GAAG,EAAEC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,WAAW,CAACE,IAAjB,CADJ,CADH,CADL,CADJ,CADJ;AAYH,C,CACT;;;AAGA,eAAef,KAAf","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\n// import \"./style.css\";\nimport API from \"../../../utils/API\";\n\n\n// class Card extends Component() {\nfunction Card1() {    \n\n        // state = {   transactions:[], \n        //             debt:0, \n        //             credit:0\n        // }\n\n        const [transactions, setTransactions] = useState([])\n        // const [debt , setDebt] = useState(0)\n        // const [credit , setCredit] = useState(0)\n\n        useEffect(() => {\n            loadTransactions()\n        }, [])\n\n        function loadTransactions(){\n            API.getTransactions()\n            .then( res =>\n                setTransactions(res.data)\n           )\n           .catch(err => console.log(err));\n        };  \n\n\n        //addAmount is a helper function takes in true/false parameter, depending if you are collecting credit or debt.        \n        // //if goes through all rows in transaction array and adds the value of all the debt if false, and all the credit if true.\n        // function addAmount(direction) {\n        //     var amount = 0;\n        //     if(direction){\n        //         transactions.map( transaction => \n        //         {\n        //                 if(transaction.type = true )\n        //                     amount += transaction.bill;   \n        //             }        \n        //         );\n        //     }\n        //     else{\n        //         transactions.map(transaction => \n        //             {    \n        //                 if(transaction.type = false )\n        //                     amount += transaction.bill;\n        //             }           \n        //         );\n        //     }\n        //     return amount;           \n        // }\n\n        // function setDebtCredit(){\n        //     this.setState({\n        //         setCredit(transaction.type))\n        // }\n\n        // // setDebtCredit = \n\n        // render(){ \n\n        //     this.setDebtCredit();\n            // let { debt , credit } = this.state\n\n            return (\n                <div>\n                    <ul>\n                        {transactions.map(transaction =>\n                            <li key={index}>\n                                <h1>{transaction.name}</h1>\n                            </li>\n                        )}\n                    </ul>\n                </div>\n    \n            );\n        }    \n// }    \n\n\nexport default Card1;"]},"metadata":{},"sourceType":"module"}