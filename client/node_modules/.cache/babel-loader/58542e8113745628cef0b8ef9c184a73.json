{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Desktop/group-venture/client/src/components/newComponents/Card/index.js\";\n// import React, { Component } from \"react\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport \"./style.css\";\nimport API from \"../../../utils/API\"; // class Card extends Component() {\n\nfunction Card() {\n  state = {\n    transactions: [],\n    debt: 0,\n    credit: 0\n  };\n  useEffect(() => {\n    loadTransactions();\n  }, []);\n\n  loadTransactions = () => {\n    API.getTransactions().then(res => setTransactions(res.data)).catch(err => console.log(err));\n  }; //addAmount is a helper function takes in true/false parameter, depending if you are collecting credit or debt.        \n  //if goes through all rows in transaction array and adds the value of all the debt if false, and all the credit if true.\n\n\n  addAmount = direction => {\n    var amount = 0;\n\n    if (direction) {\n      transactions.map(transaction => {\n        if (transaction.type = \"Credit\") amount += transaction.bill;\n      });\n    } else {\n      transactions.map(transaction => {\n        if (transaction.type = \"Debt\") amount += transaction.bill;\n      });\n    }\n\n    return amount;\n  };\n\n  setDebtCredit = () => {\n    this.setState({\n      debt: this.addAmount(\"false\"),\n      credit: this.addAmount(\"true\")\n    });\n  }; // render() {\n  // this.setDebtCredit();\n  // let { debt , credit } = this.state\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \"responsive-img\",\n    style: {\n      width: 50,\n      marginLeft: 20,\n      marginTop: 30\n    },\n    src: InIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    class: \"flow-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"flow-text\",\n    class: \"amount\",\n    style: \"color:green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, \" $\", this.addAmount(\"credit\")))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \"responsive-img\",\n    style: {\n      width: 50,\n      marginLeft: 20,\n      marginTop: 30\n    },\n    src: InIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    class: \"flow-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, cardTitle), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"flow-text\",\n    class: \"amount\",\n    style: \"color:red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \" -$\", this.addAmount(\"debt\")))));\n} // }    \n\n\nexport default Card;","map":{"version":3,"sources":["/Users/danny/Desktop/group-venture/client/src/components/newComponents/Card/index.js"],"names":["React","useState","useEffect","Component","API","Card","state","transactions","debt","credit","loadTransactions","getTransactions","then","res","setTransactions","data","catch","err","console","log","addAmount","direction","amount","map","transaction","type","bill","setDebtCredit","setState","width","marginLeft","marginTop","InIcon","cardTitle"],"mappings":"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","sourcesContent":["// import React, { Component } from \"react\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport \"./style.css\";\nimport API from \"../../../utils/API\";\n\n\n// class Card extends Component() {\nfunction Card() {    \n\n        state = {   transactions:[], \n                    debt:0, \n                    credit:0\n        }\n\n        useEffect(() => {\n            loadTransactions()\n        }, [])\n\n        loadTransactions = () =>{\n            API.getTransactions()\n            .then( res =>\n                setTransactions(res.data)\n           )\n           .catch(err => console.log(err));\n        };  \n\n        //addAmount is a helper function takes in true/false parameter, depending if you are collecting credit or debt.        \n        //if goes through all rows in transaction array and adds the value of all the debt if false, and all the credit if true.\n        addAmount = (direction) => {\n            var amount = 0;\n            if(direction){\n                transactions.map( transaction => \n                {\n                        if(transaction.type = \"Credit\")\n                            amount += transaction.bill;   \n                    }        \n                );\n            }\n            else{\n                transactions.map(transaction => \n                    {    \n                        if(transaction.type = \"Debt\")\n                            amount += transaction.bill;\n                    }           \n                );\n            }\n            return amount;           \n        }\n\n        setDebtCredit = () =>{\n            this.setState({\n                debt: this.addAmount(\"false\"),\n                credit: this.addAmount(\"true\")\n              });\n        }\n\n        // render() {\n\n            // this.setDebtCredit();\n            // let { debt , credit } = this.state\n\n            return (\n                <div>\n                    <div class=\"card\">\n                        <img class=\"responsive-img\" style={{width: 50 , marginLeft:20 ,marginTop:30 }} src={InIcon}></img>\n                        <h4 class=\"flow-text\">Title</h4>\n                        <div class=\"card-content\">\n                            <div class=\"flow-text\" class=\"amount\" style=\"color:green\"> ${this.addAmount(\"credit\")}</div>\n\n                        </div>\n                    </div>\n\n                    <div class=\"card\">\n                        <img class=\"responsive-img\" style={{width: 50 , marginLeft:20 ,marginTop:30 }} src={InIcon}></img>\n                        <h4 class=\"flow-text\">{cardTitle}</h4>\n                        <div class=\"card-content\">\n                            <div class=\"flow-text\" class=\"amount\" style=\"color:red\"> -${this.addAmount(\"debt\")}</div>\n\n                        </div>\n                    </div>\n\n                </div>\n            );\n        }    \n// }    \n\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}