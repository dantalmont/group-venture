{"ast":null,"code":"var _jsxFileName = \"/Users/danny/Desktop/group-venture/client/src/components/newComponents/Card1/index.js\";\nimport React, { useState, useEffect, Component } from \"react\"; // import \"./style.css\";\n\nimport API from \"../../../utils/API\"; // class Card extends Component() {\n\nfunction Card() {\n  // state = {   transactions:[], \n  //             debt:0, \n  //             credit:0\n  // }\n  const [transactions, setTransactions] = useState([]);\n  const [debt, setDebt] = useState(0);\n  const [credit, setCredit] = useState(0);\n  useEffect(() => {\n    loadTransactions();\n  }, []);\n\n  function loadTransactions() {\n    API.getTransactions().then(res => setTransactions(res.data)).catch(err => console.log(err));\n  }\n\n  ; //addAmount is a helper function takes in true/false parameter, depending if you are collecting credit or debt.        \n  // //if goes through all rows in transaction array and adds the value of all the debt if false, and all the credit if true.\n  // function addAmount(direction) {\n  //     var amount = 0;\n  //     if(direction){\n  //         transactions.map( transaction => \n  //         {\n  //                 if(transaction.type = true )\n  //                     amount += transaction.bill;   \n  //             }        \n  //         );\n  //     }\n  //     else{\n  //         transactions.map(transaction => \n  //             {    \n  //                 if(transaction.type = false )\n  //                     amount += transaction.bill;\n  //             }           \n  //         );\n  //     }\n  //     return amount;           \n  // }\n  // function setDebtCredit(){\n  //     this.setState({\n  //         setCredit(transaction.type))\n  // }\n  // // setDebtCredit = \n  // render(){ \n  //     this.setDebtCredit();\n  // let { debt , credit } = this.state\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    //     <div class=\"card\">\n    //         {/* <img class=\"responsive-img\" style={{width: 50 , marginLeft:20 ,marginTop:30 }}></img> */}\n    //         <h4 class=\"flow-text\">Title</h4>\n    //         <div class=\"card-content\">\n    //             <div class=\"flow-text\" class=\"amount\" style=\"color:green\"> ${transactions.bill}</div>\n    //         </div>\n    //     </div>\n    //     <div class=\"card\">\n    //         {/* <img class=\"responsive-img\" style={{width: 50 , marginLeft:20 ,marginTop:30 }}></img> */}\n    //         <h4 class=\"flow-text\">Title</h4>\n    //         <div class=\"card-content\">\n    //             <div class=\"flow-text\" class=\"amount\" style=\"color:red\"> -${transactions.bill}</div>\n    //         </div>\n    //     </div>\n    // </div>\n    React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, transactions.map(transactions => /*#__PURE__*/React.createElement(ListItem, {\n      key: transaction._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, \"transaction.bill\")))\n  );\n} // }    \n\n\nexport default Card;","map":{"version":3,"sources":["/Users/danny/Desktop/group-venture/client/src/components/newComponents/Card1/index.js"],"names":["React","useState","useEffect","Component","API","Card","transactions","setTransactions","debt","setDebt","credit","setCredit","loadTransactions","getTransactions","then","res","data","catch","err","console","log","map","transaction","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD,C,CACA;;AACA,OAAOC,GAAP,MAAgB,oBAAhB,C,CAGA;;AACA,SAASC,IAAT,GAAgB;AAER;AACA;AACA;AACA;AAEA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,IAAD,EAAQC,OAAR,IAAmBR,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM,CAACS,MAAD,EAAUC,SAAV,IAAuBV,QAAQ,CAAC,CAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,gBAAgB;AACnB,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,gBAAT,GAA2B;AACvBR,IAAAA,GAAG,CAACS,eAAJ,GACCC,IADD,CACOC,GAAG,IACNR,eAAe,CAACQ,GAAG,CAACC,IAAL,CAFnB,EAIAC,KAJA,CAIMC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJb;AAKH;;AAAA,GArBO,CAwBR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACI;;AAEA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA,wBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCZ,YAAY,CAACe,GAAb,CAAiBf,YAAY,iBAC5B,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEgB,WAAW,CAACC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,CADD;AAtBJ;AA8BH,C,CACT;;;AAGA,eAAelB,IAAf","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\n// import \"./style.css\";\nimport API from \"../../../utils/API\";\n\n\n// class Card extends Component() {\nfunction Card() {    \n\n        // state = {   transactions:[], \n        //             debt:0, \n        //             credit:0\n        // }\n\n        const [transactions, setTransactions] = useState([])\n        const [debt , setDebt] = useState(0)\n        const [credit , setCredit] = useState(0)\n\n        useEffect(() => {\n            loadTransactions()\n        }, [])\n\n        function loadTransactions(){\n            API.getTransactions()\n            .then( res =>\n                setTransactions(res.data)\n           )\n           .catch(err => console.log(err));\n        };  \n\n\n        //addAmount is a helper function takes in true/false parameter, depending if you are collecting credit or debt.        \n        // //if goes through all rows in transaction array and adds the value of all the debt if false, and all the credit if true.\n        // function addAmount(direction) {\n        //     var amount = 0;\n        //     if(direction){\n        //         transactions.map( transaction => \n        //         {\n        //                 if(transaction.type = true )\n        //                     amount += transaction.bill;   \n        //             }        \n        //         );\n        //     }\n        //     else{\n        //         transactions.map(transaction => \n        //             {    \n        //                 if(transaction.type = false )\n        //                     amount += transaction.bill;\n        //             }           \n        //         );\n        //     }\n        //     return amount;           \n        // }\n\n        // function setDebtCredit(){\n        //     this.setState({\n        //         setCredit(transaction.type))\n        // }\n\n        // // setDebtCredit = \n\n        // render(){ \n\n        //     this.setDebtCredit();\n            // let { debt , credit } = this.state\n\n            return (\n                // <div>\n                //     <div class=\"card\">\n                //         {/* <img class=\"responsive-img\" style={{width: 50 , marginLeft:20 ,marginTop:30 }}></img> */}\n                //         <h4 class=\"flow-text\">Title</h4>\n                //         <div class=\"card-content\">\n                //             <div class=\"flow-text\" class=\"amount\" style=\"color:green\"> ${transactions.bill}</div>\n\n                //         </div>\n                //     </div>\n\n                //     <div class=\"card\">\n                //         {/* <img class=\"responsive-img\" style={{width: 50 , marginLeft:20 ,marginTop:30 }}></img> */}\n                //         <h4 class=\"flow-text\">Title</h4>\n                //         <div class=\"card-content\">\n                //             <div class=\"flow-text\" class=\"amount\" style=\"color:red\"> -${transactions.bill}</div>\n\n                //         </div>\n                //     </div>\n\n                // </div>\n            \n                <List>\n                {transactions.map(transactions => (\n                  <ListItem key={transaction._id}>\n                    transaction.bill\n                  </ListItem>\n                ))}\n              </List>\n            );\n        }    \n// }    \n\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}